КВ 1:
Определение: Создание переменной или объекта в памяти компьютера.
Объявление: Сообщение компилятору о существовании переменной или функции без выделения памяти.
Инициализация: Присвоение начального значения переменной при её создании.
Присваивание: Изменение значения переменной после её создания и инициализации.
Неопределённое поведение: Недопустимое состояние программы, которое может вызвать
    непредсказуемые и опасные последствия. Избегайте его.

КВ 2:
Объект: Сущность, хранящая данные и методы.
Переменная: Именованное место в памяти для данных.
Литерал: Конкретное значение в коде (например, число или строка).
Оператор: Символ или слово для выполнения операции.
Выражение: Комбинация данных и операторов, которая вычисляет значение.
Инструкция: Команда в программе, выполняющая определенное действие.

КВ 3:
Оператор goto может создавать запутанный и труднопонимаемый код, что делает его опасным. 
    Его использование не рекомендуется, за исключением крайних случаев, таких как выход 
    из вложенных циклов или освобождение ресурсов перед выходом из функции. В большинстве 
    случаев следует избегать его использования в пользу более структурированных конструкций кода.

КВ 4:
1: Неправильное разыменование нулевого указателя указателей:
    int *ptr = nullptr;
    int x = *ptr;
2: Выход за пределы массива:
    int arr[5] = {1, 2, 3, 4, 5};
    int x = arr[10];
3: Ссылка на локальную переменную, выходящую из области видимости:
int &getLocalRef() {
    int x = 10;
    return x; // Возвращение ссылки на локальную переменную
}
int &ref = getLocalRef();

КВ5:
1: Передача по значению:
void byValue(int x) {
    x = x + 1;
}
int main() {
    int num = 5;
    byValue(num); // num остается равным 5,
    return 0;
}
num не меняется 

2: Передача по указателю:
void byPointer(int *x) {
    (*x) = (*x) + 1;
}

int main() {
    int num = 5;
    byPointer(&num); // num равно 6
    return 0;
}
3: передача по ссылке:
void byReference(int &x) {
    x = x + 1;
}

int main() {
    int num = 5;
    byReference(num);
    // num равно 6
    return 0;
}
4: Передача по указателю/ссылке const:
void byConstReference(const int &x) {
    // x = x + 1; // Ошибка компиляции, так как x объявлен как const
}

int main() {
    int num = 5;
    byConstReference(num);
    // num остается равным 5
    return 0;
}
